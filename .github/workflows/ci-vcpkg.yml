name: Build and Test (vcpkg)

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build and Test (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            triplet: x64-windows-release
          - os: macos-latest
            triplet: arm64-osx-release
          - os: ubuntu-latest
            triplet: x64-linux-release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      VCPKG_DEFAULT_HOST_TRIPLET: ${{ matrix.triplet }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up cmake and ninja
        uses: lukka/get-cmake@6b3e96a9bc9976b8b546346fdd102effedae0ca8 # v4.0.3

      - name: Set up vcpkg
        uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5

      - name: Fix for AppleClang
        run: |
          sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
          echo "CXXFLAGS=-fexperimental-library" >> "${GITHUB_ENV}"
        if: runner.os == 'macOS'

      - name: Build and test
        run: |
          cmake --preset debug-vcpkg
          cmake --build --preset debug-vcpkg
          ctest --preset debug-vcpkg

      - name: Install
        run: sudo cmake --install build-debug-vcpkg
        if: runner.os != 'Windows'

      - name: Install (Windows)
        run: cmake --install build-debug-vcpkg --config Debug
        if: runner.os == 'Windows'
